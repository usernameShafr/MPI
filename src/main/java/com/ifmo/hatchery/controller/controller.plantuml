@startuml

title __CONTROLLER's Class Diagram__\n

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.DashboardController {
          {static} + hasFailures()
          + index()
      }
    }
  }
  

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.DispatcherController {
          + index()
      }
    }
  }
  

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.DonorController {
          + giveBio()
          + index()
      }
    }
  }
  

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.HomeController {
          + index()
      }
    }
  }
  

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.IndexController {
          + index()
      }
    }
  }
  

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.OrderController {
          + createOrder()
          + index()
      }
    }
  }
  

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.PersonListController {
          + personList()
      }
    }
  }
  

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.RestartServiceController {
          - biomaterialRepository : BiomaterialRepository<Biomaterial, Long>
          - taskRepository : TaskRepository<Task, Long>
          - userRepository : UserRepository<UserX, Long>
          + getAddSkillsTask()
          + getBokanovskiyTask()
          + getChooseCasteTask()
          + getFertilizationTask()
          {static} + hasFailures()
          + index()
          + restartService()
          - commonGetProcessing()
          {static} - filterTaskByStages()
      }
    }
  }
  

  namespace com.ifmo.hatchery {
    namespace controller {
      class com.ifmo.hatchery.controller.TaskController {
          {static} - ERROR_ATTRIBUTE : String
          {static} - REDIRECT_DASHBOARD : String
          - biomaterialRepository : BiomaterialRepository<Biomaterial, Long>
          - skillRepository : SkillRepository<Skill, Long>
          - taskRepository : TaskRepository<Task, Long>
          - userRepository : UserRepository<UserX, Long>
          + getAddSkillsTask()
          + getBokanovskiyTask()
          + getChooseCasteTask()
          + getFertilizationTask()
          {static} + isStageAfter()
          + processTask()
          - commonGetProcessing()
          - getTaskWithLock()
          - lockFailed()
          - nextStage()
          - processAddSkills()
          - processBokanovskiy()
          - processCaste()
          - processFertilization()
          - processParameters()
          - returnToDashboardWithParams()
          - unlockTask()
          - validateParameters()
      }
    }
  }
  

  com.ifmo.hatchery.controller.DashboardController o-- com.ifmo.hatchery.service.DashboardService : dashboardService
  com.ifmo.hatchery.controller.DonorController o-- com.ifmo.hatchery.service.BiomaterialService : biomaterialService
  com.ifmo.hatchery.controller.DonorController o-- com.ifmo.hatchery.service.UserService : userService
  com.ifmo.hatchery.controller.HomeController o-- com.ifmo.hatchery.service.UserService : userService
  com.ifmo.hatchery.controller.OrderController o-- com.ifmo.hatchery.service.OrderService : orderService
  com.ifmo.hatchery.controller.OrderController o-- com.ifmo.hatchery.service.SkillService : skillService
  com.ifmo.hatchery.controller.OrderController o-- com.ifmo.hatchery.service.UserService : userService
  com.ifmo.hatchery.controller.PersonListController o-- com.ifmo.hatchery.service.UserService : userService
  com.ifmo.hatchery.controller.TaskController o-- com.ifmo.hatchery.service.UserService : userService


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
